<div class="games-i-play project-info">
  <div class="section1 info-section">
    <div class=content-title">
      <h1>What is it? -</h1>
    </div>
    <div class="content-details">
      <p><strong>Games I Play</strong> is a web app that charts playtime per game using the Steam Developers' API.</p>
      <h3>Built with:</h3>
      <ul>
        <li>Node.js</li>
        <li>ExpressJS</li>
        <li>D3.js</h3>
        <li>FoundationCSS</h3>
        <li>CSS3</li>
      </ul>
    </div>
  </div>
  <div class="section2 info-section">
    <div class="content-title">
      <h1>Why? -</h1>
    </div>
    <div class="content-details">
      <p>Though this app doesn't solve a particular problem, I created it for the sole purpose of learning a new technology - D3.js.
      <br/>
      Being my first personal project, I wanted to tackle a library that would challenge my ability to adapt to new kinds of programming.
      <br/>
      <br/>
      A few aspects of D3.js were particularly interesting to me:
      </p>
      <ul>
        <li>Working with inline SVG</li>
        <li>Handling large amounts of data programmatically</li>
        <li>Using a large, complex library/API</li>
      </ul>
    </div>
  </div>
  <div class="section3 info-section">
    <div class="content-title">
      <h1>Challenges -</h1>
    </div>
    <div class="content-details">
      <ol>
        <li>
          <h3>Design</h3>
          <p>
          The biggest problem I had with design was my reluctance to learn it. My mindset heavily favored business logic and thus, I felt I was justified in making a website that worked, but looked god awful.
          </p>
        </li>
        <li>
          <h3>SVG Nodes and D3.js's complex documentation</h3>
          <p>
          Drawing the nodes to fill in the chart was a raw test of patience, reading comprehension, and trial+error.
          <br/>
          <br/>
          Simply navigating D3's <a href="https://github.com/d3/d3/blob/master/API.md">API Reference</a> was extremely convoluted due to the all of the various functions and node types that are shared between different areas of the documentation.
          <br/>
          <br/>
          Trials involved writing out multiple sample JSON objects to make sure that the bubbles would pack themselves inside of the circle properly.
          <br/>
          And more often than not, the result would be completely unexpected (and sometimes hilarious).
          </p>
          <img class="failed-chart-img" src="images/games-i-play-failed-chart.png"></img>
        </li>
        <li>
          <h3>Steam's vast amounts of data</h3>
          <p>
          Steam's developer API is fantastic and beautifully documented, but the sheer amount of data I would end up with from each request was astounding and admittedly hard to work with.
          <br/>
          <br/>
          I had worked with APIs previously, but responses like these:
          <%- include('games_sample') -%>
          were outright daunting.
          </p>
        </li>
    </div>
  </div>
  <div class="section4 info-section">
    <div class="content-title">
      <h1>Lessons Learned -</h1>
    </div>
    <div class="content-details">
      <ol>
        <li>
          <h3>Design and Planning aren't lame</h3>
          <p>
          <strong>"Cowboy Coding"</strong> best describes the way that I used to think.
          My thought process would instantly jump to coding and creating something for the instant gratification of having a product of my "vision".
          <br/>
          The problem was that my "vision" was never fully... well, visualized.
          <br/>
          Planning, visualizing, and designing are the most important aspects of building an application and even though I was told so in the past, the struggles of trying to build "Games I Play" without a plan was the last straw.
          </p>
        </li>
        <li>
          <h3>Documentation should be abused</h3>
          <p>
          All too often I would try to figure out parts of D3 my own way, but would ultimately come back to the docs to undo the mess I made.
          <br/>
          <br/>
          Exposing all the information I needed through documentation before proceeding could have saved me from countless errors and roadblocks.
          </p>
        </li>
        <li>
          <h3>Javascript is a powerful language</h3>
          <p>
          Many people (myself included) coming from other programming languages often underestimate the power of Javascript.
          <br/>
          Coming from a Ruby background, I was quick to dismiss Javascript as a viable option for serverside programming, but NodeJS proved me wrong almost immediately.
          <br/>
          <br/>
          ES6 syntax, seamless integration with client-side scripts, and the simplicity of Node's 'require' module are only a few of the great features I learned to take advantage of.
          </p>
        </li>
      </ol>
    </div>
  </div>
  <div class="section5 info-section">
    <div class="content-title">
      <h1>Future Plans -</h1>
    </div>
    <div class="content-details">
      <p>Despite how rough it was to build, I plan to remake Games I Play using a library such a React or Vue. It would be a great opportunity to learn yet another library while working on my planning skills. The entire layout and style of the app desperately need to be overhauled and the chart itself can be re-factored. With these changes, it'd be easier to add on more features and make the entire project more modular.
      </p>
    </div>
  </div>
</div>
